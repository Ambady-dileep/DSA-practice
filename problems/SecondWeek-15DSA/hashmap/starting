class HashMap:
    def __init__(self, size=10):
        self.size = size
        self.table = [[] for _ in range(size)]

    def _hash(self, key):
        return hash(key) % self.size

    def insert(self, key, value):
        index = self._hash(key)
        bucket = self.table[index]

        for i, (k, v) in enumerate(bucket):
            if k == key:
                bucket[i] = (key, value)
                return
        bucket.append((key, value))

    def get(self, key):
        index = self._hash(key)
        bucket = self.table[index]

        for k, v in bucket:
            if k == key:
                return v
        return None

    def delete(self, key):
        index = self._hash(key)
        bucket = self.table[index]

        for i, (k, v) in enumerate(bucket):
            if k == key:
                del bucket[i]
                return True
        return False


h = HashMap()

h.insert("apple", 10)
h.insert("banana", 20)
print(h.get("apple"))     # 10
print(h.get("banana"))    # 20

h.insert("apple", 99)
print(h.get("apple"))     # 99 (updated)

h.delete("banana")
print(h.get("banana"))    # None


class HashMap:
    def __init__(self, size=10):
        self.size = size
        self.table = [[] for _ in range(size)]

    def _hash(self, key):
        return hash(key) % self.size
        
    def insert(self,key,value):
        index = self._hash(key)
        bucket = self.table[index]
        for i,(k,v) in enumerate(bucket):
            if k == key:
                bucket[i]=(key,value)
                return
        bucket.append((key,value))

    def get(self, key):
        index = self._hash(key)
        bucket = self.table[index]

        for k, v in bucket:
            if k == key:
                return v
        return None

    def delete(self, key):
        index = self._hash(key)
        bucket = self.table[index]  

        for i, (k, v) in enumerate(bucket):
            if k == key:
                del bucket[i]
                return True
        return False


h = HashMap()

h.insert("apple", 10)
h.insert("banana", 20)
print(h.get("apple"))     # 10
print(h.get("banana"))    # 20

h.insert("apple", 99)
print(h.get("apple"))     # 99 (updated)

h.delete("banana")
print(h.get("banana"))    # None